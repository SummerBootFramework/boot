<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.summerboot</groupId>
    <artifactId>jexpress</artifactId>
    <version>2.2.4-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Summer Boot jExpress</name>
    <description>Summer Boot jExpress focuses on solving non-functional and operational maintainability requirements, some of which Spring Boot has (may) not yet provided</description>
    <url>https://github.com/SummerBootFramework</url>
    <organization>
        <name>Summer Boot Org</name>
        <url>https://summerboot.org</url>
    </organization>
    <developers>
        <developer>
            <name>IT Development - Dw Law Office</name>
            <email>info@dulawoffice.com</email>
            <url>https://www.dulawoffice.com/</url>
        </developer>
        <developer>
            <name>jExpress Org</name>
            <url>https://jexpress.org/</url>
        </developer>
        <developer>
            <name>Changski Tie Zheng Zhang 张铁铮</name>
            <email>changski_skb@outlook.com</email>
            <url>https://www.linkedin.com/in/changski-zhang-97787b4/</url>
        </developer>
    </developers>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>The jExpress licenses this framework to you under the Apache License, version 2.0 (the "License"); you may not use this framework except in compliance with the License and you have no policy prohibiting employee contributions back to this framework (unless the contributor to this framework is your current or retired employee).</comments>
        </license>
    </licenses>
    <scm>
        <url>https://github.com/SummerBootFramework/jExpress.git</url>
        <connection>scm:git:git@github.com:SummerBootFramework/jExpress.git</connection>        
        <developerConnection>scm:git:git@github.com:SummerBootFramework/jExpress.git</developerConnection>
    </scm>
    <!--    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <compilerArgs>
                        <arg>- -enable-preview</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build> 
    to enable: remove the space in the middle of - -enable-preview
    -->
    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>      
                    <plugin>
                        <!--for unit test-->
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!-- <version>2.22.2</version> -->
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-scm-plugin</artifactId>
                        <!-- <version>1.12.2</version> -->
                    </plugin>
                    <!--Source-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <!-- <version>3.2.1</version> -->
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--Java doc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <!-- <version>3.4.0</version> -->
                        <configuration>
                            <source>11</source>
                            <aggregate>true</aggregate>
                            <charset>UTF-8</charset>
                            <encoding>UTF-8</encoding>
                            <docencoding>UTF-8</docencoding>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
 
                    <!--Deploy-->
                    <plugin>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <!-- <version>2.8.2</version> -->
                        <executions>
                            <execution>
                                <id>default-deploy</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--GPG -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--Deploy to OSSRH, and publish to Central Repository-->
                    <!-- https://mvnrepository.com/artifact/org.sonatype.plugins/nexus-staging-maven-plugin -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <!-- <version>1.6.13</version> -->
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <!-- Central Repository info -->
            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <name>Central Repository OSSRH</name>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>                
            </distributionManagement>
        </profile>
    </profiles>
    
    <properties>        
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <!-- Commons -->
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <commons-cli.version>1.5.0</commons-cli.version>
        <commons-io.version>2.11.0</commons-io.version>
        <!-- Logging -->
        <log4j-api.version>2.19.0</log4j-api.version>
        <log4j-disruptor.version>3.4.4</log4j-disruptor.version>
        <!-- Mail -->
        <jakarta-mail.version>2.0.1</jakarta-mail.version>
        <!-- Security -->
        <bouncycastle.version>1.72</bouncycastle.version>
        <!-- JWT -->
        <jwt.version>0.11.5</jwt.version>

        <!-- NIO Netty -->
        <netty.version>4.1.87.Final</netty.version>
        <netty-tcnative.version>2.0.57.Final</netty-tcnative.version>
        <!-- gRPC and protobuf -->
        <grpc.version>1.52.1</grpc.version>
        <protobuf.version>3.21.12</protobuf.version>
        <!-- Web JAX-RS -->        
        <swagger.core.version>2.2.8</swagger.core.version>
<!--        <elastic-apm.version>1.36.0</elastic-apm.version>-->
        
        
        <!-- MIME-Type -->
        <tika.version>2.6.0</tika.version>
        <!-- JAX-RS -->
        <rs-api.version>3.1.0</rs-api.version>
        <jakarta.annotation.version>2.1.1</jakarta.annotation.version>
        <reflections.version>0.10.2</reflections.version>

        <!-- JSON/XML/Bean Validation 
        Vulnerability Details : CVE-2022-42003 - Publish Date : 2022-10-02 Last Update Date : 2022-10-04
        In FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, 
        when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled.
        -->
        <jackson.version>2.14.2</jackson.version>
        <!-- Bean Validation -->
        <hibernate-validator.version>8.0.0.Final</hibernate-validator.version>
        <el.Implementation.version>4.0.2</el.Implementation.version>

        <!-- IOC Injection -->
        <guice.version>5.1.0</guice.version>

        <!-- JPA -->
        <hibernate.version>6.1.6.Final</hibernate.version>
        <hikari-cp.version>5.0.1</hikari-cp.version>

        <!-- Cache -->
        <jedis.version>4.3.1</jedis.version>

        <!-- Template Engine -->
        <freemarker.version>2.3.32</freemarker.version>
        <!-- Barcode -->
        <zxing.version>3.5.1</zxing.version>
        <!-- PDF - PDFBox 
        <pdfbox.version>2.0.25</pdfbox.version>-->
        <!-- PDF - com.openhtmltopdf -->	       
        <openhtml.version>1.0.10</openhtml.version>
        <!-- PDF - iText -->
        <itext7-core.version>7.2.5</itext7-core.version>
        <itext7-html2pdf.version>4.0.5</itext7-html2pdf.version>
        
        <!-- Testing  -->
        <testng.version>7.7.1</testng.version>
    </properties>
	
    <dependencies>
        <!-- Commons -->
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 Apache 2.0-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-cli/commons-cli Apache 2.0-->
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
            <!--            <optional>true</optional>-->
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-io/commons-io Apache 2.0-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>


        <!-- Logging -->
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api Apache 2.0-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j-api.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core Apache 2.0-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j-api.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.lmax/disruptor Apache 2.0-->
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${log4j-disruptor.version}</version>
        </dependency>


        <!-- Mail -->
        <!-- https://mvnrepository.com/artifact/com.sun.mail/jakarta.mail -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>${jakarta-mail.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sun.activation/jakarta.activation -->
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>jakarta.activation</artifactId>
            <version>${jakarta-mail.version}</version>
        </dependency>


        <!-- Security -->
        <!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk18on BouncyCastle-->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk18on</artifactId>
            <version>${bouncycastle.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk18on -->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk18on</artifactId>
            <version>${bouncycastle.version}</version>
        </dependency>

        <!-- JWT -->
        <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt Apache 2.0-->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jwt.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jwt.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId> <!-- or jjwt-gson if Gson is preferred -->
            <version>${jwt.version}</version>
        </dependency>

        <!-- backward compatibility for jjwt only https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>



        <!-- NIO Netty -->
        <!-- https://mvnrepository.com/artifact/io.netty/netty-all Apache 2.0-->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>${netty.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.netty/netty-transport-native-epoll Apache 2.0-->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-epoll</artifactId>
            <version>${netty.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.netty/netty-transport-native-kqueue Apache 2.0-->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-kqueue</artifactId>
            <version>${netty.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.netty/netty-tcnative-boringssl-static Apache-->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-tcnative-boringssl-static</artifactId>
            <version>${netty-tcnative.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.netty/netty-tcnative-classes -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-tcnative-classes</artifactId>
            <version>${netty-tcnative.version}</version>
        </dependency>        
        
        <!-- gRPC and protobuf -->
        <!-- https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java -->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${protobuf.version}</version>
            <!--            <scope>provided</scope>-->
        </dependency>     
        <!-- https://mvnrepository.com/artifact/io.grpc/grpc-protobuf -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.version}</version>
            <!--            <scope>provided</scope>-->
        </dependency>   
        <!-- https://mvnrepository.com/artifact/io.grpc/grpc-netty-shaded -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
            <version>${grpc.version}</version>
            <!--            <scope>provided</scope>-->
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.grpc/grpc-stub -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc.version}</version>
            <!--            <scope>provided</scope>-->
        </dependency>

        <!-- Open API -->
        <!-- https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger.core.version}</version>
            <scope>compile</scope>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/co.elastic.apm/apm-agent-api 
        <dependency>
            <groupId>co.elastic.apm</groupId>
            <artifactId>apm-agent-api</artifactId>
            <version>${elastic-apm.version}</version>
            <scope>provided</scope>
        </dependency>-->


        <!-- MIME-Type -->
        <!-- https://mvnrepository.com/artifact/org.apache.tika/tika-core Apache 2.0-->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>${tika.version}</version>
        </dependency>
        <!-- JAX-RS -->
        <!-- https://mvnrepository.com/artifact/jakarta.ws.rs/jakarta.ws.rs-api -->
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>${rs-api.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api CDDL, GPL 2.0 -->
        <!-- https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>${jakarta.annotation.version}</version>
        </dependency>
       
        <!-- https://mvnrepository.com/artifact/org.reflections/reflections BSD 2-clause-->
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
        </dependency>


        <!-- JSON/XML/Bean Validation -->
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind Apache 2.0-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core Apache 2.0-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations Apache 2.0-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 Apache 2.0-->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.module/jackson-module-jsonSchema Apache 2.0-->
        <!-- it has dependency on https://mvnrepository.com/artifact/javax.validation/validation-api, which is replaced by jakarta.validation
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jsonSchema</artifactId>
            <version>${jackson.version}</version>
            <scope>test</scope>
        </dependency>-->
        <!-- XML -->
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml Apache 2.0-->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        
        
        <!-- Bean Validation -->
        <!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.glassfish/jakarta.el -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <version>${el.Implementation.version}</version>
            <!-- <scope>test</scope>-->
        </dependency>

        <!-- Injection -->
        <!-- https://mvnrepository.com/artifact/com.google.inject/guice Apache 2.0-->            
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
        </dependency>


        <!-- JPA -->
        <!-- https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core  LGPL 2.1-->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-hikaricp  LGPL 2.1-->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-hikaricp</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <!-- JPA Connection Pool -->
        <!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP Apache 2.0-->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${hikari-cp.version}</version>
        </dependency>



        <!-- Cache -->
        <!-- https://mvnrepository.com/artifact/redis.clients/jedis MIT-->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
            <scope>provided</scope>
        </dependency>


        <!-- Template Engine -->
        <!-- https://mvnrepository.com/artifact/org.freemarker/freemarker Apache 2.0-->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${freemarker.version}</version>
        </dependency>
        
        <!-- Barcode -->
        <!-- ZXing (“zebra crossing”) is an open-source, multi-format 1D/2D barcode image processing library implemented in Java, with ports to other languages. This is the main library that supports QR codes in Java. -->
        <!-- https://mvnrepository.com/artifact/com.google.zxing/core -->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>${zxing.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.zxing/javase -->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
            <version>${zxing.version}</version>
            <scope>provided</scope>
        </dependency>
        
        

        <!-- PDF - iText -->
        <!-- https://mvnrepository.com/artifact/com.itextpdf/itext7-core AGPL 3.0-->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itext7-core</artifactId>
            <version>${itext7-core.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.itextpdf/html2pdf AGPL 3.0-->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>html2pdf</artifactId>
            <version>${itext7-html2pdf.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- PDF - PDFBox -->
        <!-- https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox Apache 2.0-->
        <!--        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>${pdfbox.version}</version>
        </dependency>-->        
        
        <!-- PDF - com.openhtmltopdf -->
        <!-- https://mvnrepository.com/artifact/com.openhtmltopdf/openhtmltopdf-pdfbox LGPL 2.1-->
        <dependency>
            <!-- ALWAYS required, usually included transitively. -->
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-core</artifactId>
            <version>${openhtml.version}</version>
        </dependency>
        <dependency>
            <!-- Required for PDF output. -->
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-pdfbox</artifactId>
            <version>${openhtml.version}</version>
        </dependency>  	
        <dependency>
            <!-- Required for image output only. -->  	
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-java2d</artifactId>
            <version>${openhtml.version}</version>
        </dependency>  	
        <dependency>
            <!-- Optional, leave out if you do not need right-to-left or bi-directional text support. -->
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-rtl-support</artifactId>
            <version>${openhtml.version}</version>
        </dependency>  	 
        <dependency>
            <!-- Optional, leave out if you do not need logging via slf4j. -->
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-slf4j</artifactId>
            <version>${openhtml.version}</version>
        </dependency>  	
        <dependency>
            <!-- Optional, leave out if you do not need SVG support. -->
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-svg-support</artifactId>
            <version>${openhtml.version}</version>
        </dependency>
        <dependency>
            <!-- Optional, leave out if you do not need MathML support. -->
            <!-- Introduced in RC-13. -->
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-mathml-support</artifactId>
            <version>${openhtml.version}</version>
        </dependency>


        <!-- Testing  -->
        <!-- https://mvnrepository.com/artifact/org.testng/testng Apache 2.0-->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>  
</project>
